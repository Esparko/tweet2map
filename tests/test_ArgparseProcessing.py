import argparse
from configparser import ConfigParser
from src.ArgparseProcessing import argparse_processing, argparse_generate_flags
from main import Tweet2Map

def test_argparse_flag():
    """
    Test CLI flags are valid
    """
    
    test_flags = [
        'csv_out_path',
        'p',
        'consumer_key',
        'consumer_secret',
        'access_token',
        'access_secret',
        'inc_database_path',
        'shp_path',
        'loc_database_path'
    ]
    # test_args used for input only. No testing done on test_args
    test_args = [
        '-csv_out_path', 'tests\\test_data\\test_csv.csv',
        '-consumer_key', 'ConsumerKey1234',
        '-consumer_secret', 'ConsumerSecret5678',
        '-access_token', 'AccessToken1234',
        '-access_secret', 'AccessSecret5678',
        '-inc_database_path', 'tests\\test_data\\data.sqlite',
        '-shp_path', 'tests\\test_data\\boundary_ncr.shp',
        '-loc_database_path', 'tests\\test_data\\locations.sqlite'
    ]

    parser = argparse.ArgumentParser(description='Tweet2Map Testing')
    parser = argparse_generate_flags(parser)
    args = parser.parse_args(test_args)
    args = vars(args)
    parser_flags = args.keys()
    
    # Run asserts
    for flag in test_flags:
        message = f'Flag "{flag}" not part of flags generated by argparse_generate_flags'
        assert flag in parser_flags, message

    